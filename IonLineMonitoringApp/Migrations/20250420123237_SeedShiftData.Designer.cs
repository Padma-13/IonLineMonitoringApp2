// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IonLineMonitoringApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250420123237_SeedShiftData")]
    partial class SeedShiftData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("IonLineMonitoringApp.Models.Line", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LineId"));

                    b.Property<string>("LineName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("LineId");

                    b.ToTable("Lines");
                });

            modelBuilder.Entity("IonLineMonitoringApp.Models.LineProduct", b =>
                {
                    b.Property<int>("LineProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LineProductId"));

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("LineProductId");

                    b.HasIndex("LineId");

                    b.HasIndex("ProductId");

                    b.ToTable("LineProducts");
                });

            modelBuilder.Entity("IonLineMonitoringApp.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("IonLineMonitoringApp.Models.ShiftData", b =>
                {
                    b.Property<int>("ShiftDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ShiftDataId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<double>("LineSpeed")
                        .HasColumnType("double");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("TotalEnergy")
                        .HasColumnType("double");

                    b.Property<int>("TotalProduction")
                        .HasColumnType("int");

                    b.HasKey("ShiftDataId");

                    b.HasIndex("LineId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShiftDatas");

                    b.HasData(
                        new
                        {
                            ShiftDataId = 1,
                            Date = new DateTime(2025, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineId = 1,
                            LineSpeed = 120.0,
                            ProductId = 1,
                            Shift = "A",
                            TotalEnergy = 250.0,
                            TotalProduction = 500
                        },
                        new
                        {
                            ShiftDataId = 2,
                            Date = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineId = 2,
                            LineSpeed = 100.0,
                            ProductId = 2,
                            Shift = "B",
                            TotalEnergy = 200.0,
                            TotalProduction = 400
                        },
                        new
                        {
                            ShiftDataId = 3,
                            Date = new DateTime(2025, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LineId = 3,
                            LineSpeed = 110.0,
                            ProductId = 3,
                            Shift = "C",
                            TotalEnergy = 230.0,
                            TotalProduction = 450
                        });
                });

            modelBuilder.Entity("IonLineMonitoringApp.Models.LineProduct", b =>
                {
                    b.HasOne("IonLineMonitoringApp.Models.Line", "Line")
                        .WithMany("LineProducts")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IonLineMonitoringApp.Models.Product", "Product")
                        .WithMany("LineProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("IonLineMonitoringApp.Models.ShiftData", b =>
                {
                    b.HasOne("IonLineMonitoringApp.Models.Line", "Line")
                        .WithMany("ShiftDatas")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IonLineMonitoringApp.Models.Product", "Product")
                        .WithMany("ShiftDatas")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("IonLineMonitoringApp.Models.Line", b =>
                {
                    b.Navigation("LineProducts");

                    b.Navigation("ShiftDatas");
                });

            modelBuilder.Entity("IonLineMonitoringApp.Models.Product", b =>
                {
                    b.Navigation("LineProducts");

                    b.Navigation("ShiftDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
